name: "Master Builder"

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  SUBSCRIPTION: "Free Trial (8d70006d-efa7-443d-912f-caf4d53fef5d)"

trigger:
  - master

stages:
  - stage: build
    displayName: "Build Code"

    jobs:
      - job: build_js
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - checkout: self

          - task: NodeTool@0
            displayName: "Install Node"
            inputs:
              versionSpec: "11.15.0"

          - task: Cache@2
            displayName: "Cache packages"
            inputs:
              key: "yarn | '$(Agent.OS)' | app/yarn.lock"
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
              path: $(YARN_CACHE_FOLDER)

          - script: |
              cd app
              yarn --frozen-lockfile
            displayName: "Install node modules"

          - publish: $(System.DefaultWorkingDirectory)/app
            displayName: "Publish pre-built JS code"
            artifact: CandeeCamp-PrePublish

          - script: |
              cd app
              yarn build
            displayName: "Build code"

          - publish: $(System.DefaultWorkingDirectory)/app/build
            displayName: "Publish built JS code"
            artifact: CandeeCamp

      - job: build_api
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - checkout: self

          - task: UseDotNet@2
            displayName: "Install .NET Core SDK"
            inputs:
              version: "2.2.x"
              packageType: runtime

          - script: |
              cd api
              dotnet restore
            displayName: "Restore packages"

          - script: |
              cd api
              dotnet build
            displayName: "Build API"

          - script: |
              cd api
              dotnet publish -c Release
            displayName: "Publish API Code"

          - publish: $(System.DefaultWorkingDirectory)/api/bin/Release/netcoreapp2.1/publish
            displayName: "Publish built API code"
            artifact: CandeeCampApi

  - stage: test
    displayName: "Test Code"
    dependsOn: build
    condition: succeeded()

    jobs:
      - job: test_js
        pool:
          vmImage: "ubuntu-latest"

        steps:
          - download: current
            artifact: CandeeCamp-PrePublish

          - task: NodeTool@0
            displayName: "Install Node"
            inputs:
              versionSpec: "11.15.0"

          - script: |
              cd $(Pipeline.Workspace)/CandeeCamp-PrePublish
              yarn test:ci
            displayName: "Test JS code"
      
      # - job: test_api

  - stage: deploy
    displayName: "Deploy Code"
    dependsOn: [build, test]
    condition: succeeded()

    jobs:
      - job: deploy_js
        steps:
          - download: current
            artifact: CandeeCamp

          - task: AzureRmWebAppDeployment@4
            displayName: "Deploy App"
            inputs:
              ConnectionType: "AzureRM"
              azureSubscription: $(SUBSCRIPTION)
              appType: "webAppLinux"
              WebAppName: "candeecamp"
              packageForLinux: "$(Pipeline.Workspace)/CandeeCamp"
              RuntimeStack: "NODE|lts"

      - job: deploy_api
        steps:
          - download: current
            artifact: CandeeCampApi

          - task: AzureRmWebAppDeployment@4
            displayName: "Deploy API"
            inputs:
              ConnectionType: "AzureRM"
              azureSubscription: $(SUBSCRIPTION)
              appType: "webAppLinux"
              WebAppName: "candeecamp-api"
              packageForLinux: "$(Pipeline.Workspace)/CandeeCampApi"
              RuntimeStack: "DOTNETCORE|2.2"